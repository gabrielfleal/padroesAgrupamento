Faucet: streaming de novo assembly graph construction.
Motivation: We present Faucet, a two-pass streaming algorithm for assembly graph construction. Faucet builds an assembly graph incrementally as each read isprocessed. Thus, reads need not be stored locally, as they can be processed whiledownloading data and then discarded. We demonstrate this functionality byperforming streaming graph assembly of publicly available data, and observe that the ratio of disk use to raw data size decreases as coverage is increased.
Results: Faucet pairs the de Bruijn graph obtained from the reads with additionalmeta-data derived from them. We show these metadata-coverage counts collected at junction k-mers and connections bridging between junction pairs-contain mostsalient information needed for assembly, and demonstrate they enable cleaning of metagenome assembly graphs, greatly improving contiguity while maintainingaccuracy. We compared Fauceted resource use and assembly quality to state of the art metagenome assemblers, as well as leading resource-efficient genomeassemblers. Faucet used orders of magnitude less time and disk space than thespecialized metagenome assemblers MetaSPAdes and Megahit, while also improving ontheir memory use; this broadly matched performance of other assemblers optimizingresource efficiency-namely, Minia and LightAssembler. However, on metagenomestested, Faucet,o outputs had 14-110% higher mean NGA50 lengths compared withMinia, and 2- to 11-fold higher mean NGA50 lengths compared with LightAssembler, the only other streaming assembler available.
Availability and implementation: Faucet is available athttps://github.com/Shamir-Lab/Faucet.
Contact: rshamir@tau.ac.il or eranhalperin@gmail.com.
Supplementary information: Supplementary data are available at Bioinformaticsonline.